# import Address from "addresses.graphql"
# import Contact from "contacts.graphql"
# import Domain from "domains.graphql"
# import Profession from "professions.graphql"
# import Recruiter from "recruiters.graphql"
# import LegacyService from "legacy-services.graphql"

scalar DateTime

type Job {
  id: ID!

  applicationWebsiteUrl: String
  contextDescription: String
  contractTypes: [String]
  createdAt: DateTime
  expiredAt: DateTime
  missionDescription: String
  missionVideoUrl: String
  particularitiesDescription: String
  perksDescription: String
  processDescription: String
  profileDescription: String
  remoteStatus: String
  salaryMax: Int
  salaryMin: Int
  seniorityInMonths: Int
  slug: String
  source: String
  sourceUrl: String
  state: String
  tasksDescription: String
  teamDescription: String
  title: String
  updatedAt: DateTime

  address: Address
  domains: [Domain]
  infoContact: Contact
  applicationContacts: [Contact]
  profession: Profession
  recruiter: Recruiter

  _count: JobCounters
}

type JobCounters {
  applications: Int
}

input JobInput {
  id: String

  applicationWebsiteUrl: String
  contextDescription: String
  contractTypes: [String]
  expiredAt: DateTime
  missionDescription: String
  missionVideoUrl: String
  particularitiesDescription: String
  perksDescription: String
  processDescription: String
  profileDescription: String
  remoteStatus: String
  salaryMax: Int
  salaryMin: Int
  seniorityInMonths: Int
  slug: String
  state: String
  tasksDescription: String
  teamDescription: String
  title: String
  updatedAt: DateTime

  addressId: String
  applicationContactIds: [String]
  domainIds: [String]
  infoContactId: String
  professionId: String
  recruiterId: String
}

type JobsResult {
  count: Int!
  data: [Job!]!
  index: Int!
  length: Int!
}

type PublicJob {
  id: ID!

  applicationWebsiteUrl: String
  contextDescription: String
  contractTypes: [String]
  createdAt: DateTime
  expiredAt: DateTime
  missionDescription: String
  missionVideoUrl: String
  particularitiesDescription: String
  perksDescription: String
  processDescription: String
  profileDescription: String
  remoteStatus: String
  salaryMax: Int
  salaryMin: Int
  seniorityInMonths: Int
  slug: String
  state: String
  tasksDescription: String
  teamDescription: String
  title: String
  updatedAt: DateTime

  address: Address
  domains: [Domain]
  infoContact: Contact
  applicationContacts: [Contact]
  profession: Profession
  recruiter: Recruiter

  ########################################
  # Legacy fields

  advantages: String
  conditions: String
  # createdAt: DateTime
  department: [String]
  entity: String
  experiences: [String]
  hiringProcess: String
  isMigrated: Boolean
  limitDate: DateTime
  locations: [String]
  mission: String
  more: String
  openedToContractTypes: [String]
  profile: String
  publicationDate: DateTime
  reference: String
  salary: String
  # slug: String!
  source: String
  # state: String!
  tasks: String
  team: String
  teamInfo: String
  # title: String!
  toApply: String
  # updatedAt: DateTime

  legacyService: LegacyService
}

type PublicJobsResult {
  count: Int!
  data: [PublicJob!]!
  index: Int!
  length: Int!
}
