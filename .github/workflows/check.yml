name: Check

on:
  push:
  pull_request_target:

jobs:
  approve:
    name: Approve
    if: ${{ github.event.event_name == 'pull_request_target' }}
    runs-on: ubuntu-latest
    steps:
      - name: Approve
        run: |
          echo github.event.event_name
          echo For security reasons, all external pull requests require an approval before running this workflow.

  lint:
    name: Lint
    needs:
      - approve
    if: ${{ always() && (github.event.event_name != 'pull_request_target' || needs.approve.result == 'success') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2.5.1
        with:
          cache: yarn
          node-version: 16
      - name: Install
        run: yarn
      - name: Lint
        run: yarn test:lint --ignore-pattern '/__tests__/*'

  type:
    name: Type
    needs:
      - approve
    if: ${{ always() && (github.event.event_name != 'pull_request_target' || needs.approve.result == 'success') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2.5.1
        with:
          cache: yarn
          node-version: 16
      - name: Install
        run: yarn
      - name: Lint
        run: yarn test:type

  test_unit:
    name: Unit Test
    needs:
      - approve
    if: ${{ always() && (github.event.event_name != 'pull_request_target' || needs.approve.result == 'success') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2.5.1
        with:
          cache: yarn
          node-version: 16
      - name: Install
        run: yarn
      - name: Test
        run: yarn test:unit --coverage --maxWorkers="50%"
      - name: Upload coverage
        run: yarn codecov

  test_e2e:
    name: E2E Test
    needs:
      - approve
    if: ${{ always() && (github.event.event_name != 'pull_request_target' || needs.approve.result == 'success') }}
    runs-on: ubuntu-latest
    environment:
      name: Test
    env:
      DATABASE_URL: postgresql://test_db_user:test_db_password@localhost:5432/metiers_numeriques?schema=public
      DOMAIN_URL: http://localhost:3000
      EDDSA_PRIVATE_KEY: ${{ secrets.EDDSA_PRIVATE_KEY }}
      NEXT_PUBLIC_EDDSA_PUBLIC_KEY: ${{ secrets.NEXT_PUBLIC_EDDSA_PUBLIC_KEY }}
      NODE_ENV: production
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      SENTRY_ENVIRONMENT: ci
      SENTRY_ORG: dinum
      SENTRY_PROJECT: metiers-numeriques
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: metiers_numeriques
          POSTGRES_USER: test_db_user
          POSTGRES_PASSWORD: test_db_password
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache
        if: ${{ always() }}
        id: cache
        uses: actions/cache@v2
        # https://playwright.dev/docs/ci#directories-to-cache
        with:
          path: |
            ~/.cache/ms-playwright
            **/.next/cache
          key: ${{ hashFiles('**/yarn.lock') }}
      - name: Setup Node.js
        uses: actions/setup-node@v2.5.0
        with:
          cache: yarn
          node-version: 16
      - name: Install
        run: yarn --frozen-lockfile --production=false
      - name: Install Playwright browsers
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        run: |
          npx playwright install-deps chromium
          npx playwright install chromium
      - name: Build
        run: yarn build
      - name: Serve
        run: yarn start &
      - name: Run end-to-end tests
        run: yarn test:e2e
      - name: Archive failed tests trace
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: |
            ./test-results
