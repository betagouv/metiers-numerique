scalar DateTime
scalar JSONObject

type Query {
  getFile(id: String!): File
  getFiles(
    pageIndex: Int!
    query: String
    perPage: Int
  ): FilesResult!

  getLegacyEntity(id: String!): LegacyEntity
  getLegacyEntities(
    pageIndex: Int!
    perPage: Int!
    query: String
  ): LegacyEntitiesResult!
  getLegacyEntitiesList: [LegacyEntity!]!

  getLegacyInstitution(id: String, slug: String): LegacyInstitution
  getLegacyInstitutions(
    pageIndex: Int!
    perPage: Int!
    query: String
  ): LegacyInstitutionsResult!

  getLegacyJob(id: String, slug: String): LegacyJob
  getLegacyJobs(
    pageIndex: Int!
    perPage: Int!
    query: String
    region: String
    source: String
    state: String
  ): LegacyJobsResult!

  getLegacyService(id: String!): LegacyService
  getLegacyServices(
    pageIndex: Int!
    perPage: Int!
    query: String
  ): LegacyServicesResult!
  getLegacyServicesList: [LegacyService!]!

  getUser(id: String!): User
  getUsers(
    pageIndex: Int!
    perPage: Int!
    query: String
  ): UsersResult!
}

type Mutation {
  createFile(input: FileInput!): File
  deleteFile(id: String!): File
  updateFile(id: String!, input: FileInput!): File

  createLegacyEntity(input: LegacyEntityInput!): LegacyEntity
  deleteLegacyEntity(id: String!): LegacyEntity
  updateLegacyEntity(id: String!, input: LegacyEntityInput!): LegacyEntity

  createLegacyInstitution(input: LegacyInstitutionInput!): LegacyInstitution
  deleteLegacyInstitution(id: String!): LegacyInstitution
  updateLegacyInstitution(id: String!, input: LegacyInstitutionInput!): LegacyInstitution

  createLegacyJob(input: LegacyJobInput!): LegacyJob
  deleteLegacyJob(id: String!): LegacyJob
  updateLegacyJob(id: String!, input: LegacyJobInput!): LegacyJob

  createLegacyService(input: LegacyServiceInput!): LegacyService
  deleteLegacyService(id: String!): LegacyService
  updateLegacyService(id: String!, input: LegacyServiceInput!): LegacyService

  deleteUser(id: String!): User
  updateUser(id: String!, input: UserInput!): User
}

type File {
  id: ID!

  createdAt: DateTime!
  title: String!
  type: String!
  updatedAt: DateTime!
  url: String!
}

type FilesResult {
  count: Int!
  data: [File!]!
  index: Int!
  length: Int!
}

input FileInput {
  title: String!
  type: String!
  url: String!
}

type LegacyEntity {
  id: ID!

  fullName: String
  logoUrl: String
  name: String
}

type LegacyEntitiesResult {
  count: Int!
  data: [LegacyEntity!]!
  index: Int!
  length: Int!
}

input LegacyEntityInput {
  fullName: String
  logoUrl: String
  name: String
}

type LegacyInstitution {
  id: ID!

  address: String
  challenges: String
  files: [FilesOnLegacyInstitutions]
  fullName: String
  hiringProcess: String
  isPublished: Boolean
  joinTeam: String
  keyNumbers: String
  logoFile: File
  missions: String
  motivation: String
  organization: String
  profile: String
  project: String
  schedule: String
  slug: String!
  socialNetworkUrls: [String]
  testimonial: String
  thumbnailFile: File
  title: String
  value: String
  websiteUrls: [String]
}
type FilesOnLegacyInstitutions {
  legacyInstitutionId: String!
  file: File!
  section: String!
  assignedAt: DateTime!
}

type LegacyInstitutionsResult {
  count: Int!
  data: [LegacyInstitution!]!
  index: Int!
  length: Int!
}

input LegacyInstitutionInput {
  id: ID

  address: String
  challenges: String
  fullName: String
  hiringProcess: String
  isPublished: Boolean
  joinTeam: String
  keyNumbers: String
  logoFileId: ID
  missions: String
  motivation: String
  organization: String
  profile: String
  project: String
  schedule: String
  slug: String
  socialNetworkUrls: [String]
  testimonial: String
  thumbnailFileId: ID
  title: String
  value: String
  websiteUrls: [String]

  fileIds: [String]
}

type LegacyJob {
  id: ID

  advantages: String
  conditions: String
  createdAt: DateTime
  department: [String]
  entity: String
  experiences: [String]
  hiringProcess: String
  limitDate: DateTime
  locations: [String]
  mission: String
  more: String
  openedToContractTypes: [String]
  profile: String
  publicationDate: DateTime
  reference: String
  salary: String
  slug: String!
  source: String!
  state: String!
  tasks: String
  team: String
  teamInfo: String
  title: String!
  toApply: String
  updatedAt: DateTime

  legacyService: LegacyService
}

type LegacyJobsResult {
  count: Int!
  data: [LegacyJob!]!
  index: Int!
  length: Int!
}

input LegacyJobInput {
  id: String

  advantages: String
  conditions: String
  department: [String]
  entity: String
  experiences: [String]
  hiringProcess: String
  limitDate: DateTime
  locations: [String]
  mission: String
  more: String
  openedToContractTypes: [String]
  profile: String
  publicationDate: DateTime
  reference: String
  salary: String
  slug: String
  state: String
  source: String
  tasks: String
  team: String
  teamInfo: String
  title: String
  toApply: String

  legacyServiceId: String
}

type LegacyService {
  id: ID!

  fullName: String
  name: String
  region: String
  shortName: String
  url: String

  legacyEntity: LegacyEntity
}

type LegacyServicesResult {
  count: Int!
  data: [LegacyService!]!
  index: Int!
  length: Int!
}

input LegacyServiceInput {
  fullName: String
  name: String
  region: String
  shortName: String
  url: String

  legacyEntityId: String
}

type User {
  id: ID!

  email: String!
  firstName: String!
  isActive: Boolean!
  lastName: String!
  role: String!
}

type UsersResult {
  count: Int!
  data: [User!]!
  index: Int!
  length: Int!
}

input UserInput {
  email: String!
  firstName: String!
  isActive: Boolean!
  lastName: String!
  role: String!
}
